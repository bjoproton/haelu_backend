# Generated by Django 4.1.3 on 2023-02-24 19:36

from django.db import migrations
from haelu.enums import VALUE_TYPE_INTEGER, VALUE_TYPE_BOOLEAN, OPERATOR_EQUAL_TO, OPERATOR_LESS_THAN, OPERATOR_GREATER_THAN
from decisions.enums import NODE_TYPE_LEAF, NODE_TYPE_NON_LEAF


def add_spesis_data(apps, schema_editor):
    condition_model = apps.get_model('decisions', 'Condition')
    node_model = apps.get_model('decisions', 'Node')
    decisitiontree_model = apps.get_model('decisions', 'DecisionTree')
    dt_m2m = apps.get_model('decisions', 'DecisionTreeNodeM2M')
    
    mental = condition_model(name='relatives concerned about mental health',
                             value_name='mental state concern',
                             value_type=VALUE_TYPE_BOOLEAN,
                             operator=OPERATOR_EQUAL_TO,
                             value="True")
    mental.save()

    mental_node = node_model(name='mental state concern', condition=mental, node_type=NODE_TYPE_NON_LEAF)
    mental_node.save()
    
    systolic = condition_model(name='systolic bp < 90',
                               value_name='systolic bp',
                               value_type=VALUE_TYPE_INTEGER,
                               operator=OPERATOR_LESS_THAN,
                               value="90")
    systolic.save()

    systolic_node = node_model(name='systolic bp < 90', condition=systolic, node_type=NODE_TYPE_NON_LEAF)
    systolic_node.save()
    
    urine = condition_model(name='has urine infection',
                            value_name='urine infection',
                            value_type=VALUE_TYPE_BOOLEAN,
                            operator=OPERATOR_EQUAL_TO,
                            value="True")
    urine.save()

    urine_node = node_model(name='has urine infection', condition=urine, node_type=NODE_TYPE_NON_LEAF)
    urine_node.save()
    
    age = condition_model(name='age > 75',
                               value_name='age',
                               value_type=VALUE_TYPE_INTEGER,
                               operator=OPERATOR_GREATER_THAN,
                               value="75")
    age.save()

    age_node = node_model(name='age > 75', condition=age, node_type=NODE_TYPE_NON_LEAF)
    age_node.save()

    negative_node = node_model(name='Negative', node_type=NODE_TYPE_LEAF)
    negative_node.save()

    redflag_node = node_model(name='Red Flag', node_type=NODE_TYPE_LEAF)
    redflag_node.save()

    amberflag_node = node_model(name='Amber Flag', node_type=NODE_TYPE_LEAF)
    amberflag_node.save()

    dt = decisitiontree_model(name="Sepsis V1")
    dt.save()

    dt_m2m(decision_tree=dt, node=age_node, pos_node=urine_node, neg_node=negative_node).save()
    dt_m2m(decision_tree=dt, node=urine_node, pos_node=systolic_node, neg_node=negative_node).save()
    dt_m2m(decision_tree=dt, node=systolic_node, pos_node=redflag_node, neg_node=mental_node).save()
    dt_m2m(decision_tree=dt, node=mental_node, pos_node=amberflag_node, neg_node=negative_node).save()
    
    
class Migration(migrations.Migration):

    dependencies = [
        ('decisions', '0007_remove_node_neg_node_remove_node_pos_node'),
    ]

    operations = [
        migrations.RunPython(add_spesis_data),
    ]
